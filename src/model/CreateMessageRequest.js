/**
 * OpenAI Assistants API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateMessageRequest model module.
 * @module model/CreateMessageRequest
 * @version 0.1.0
 */
class CreateMessageRequest {
    /**
     * Constructs a new <code>CreateMessageRequest</code>.
     * @alias module:model/CreateMessageRequest
     * @param role {String} Role of the message sender (either 'user' or 'system')
     * @param content {String} The message content to be processed by the agent.
     */
    constructor(role, content) { 
        
        CreateMessageRequest.initialize(this, role, content);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, role, content) { 
        obj['role'] = role;
        obj['content'] = content;
    }

    /**
     * Constructs a <code>CreateMessageRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateMessageRequest} obj Optional instance to populate.
     * @return {module:model/CreateMessageRequest} The populated <code>CreateMessageRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateMessageRequest();

            if (data.hasOwnProperty('role')) {
                obj['role'] = ApiClient.convertToType(data['role'], 'String');
            }
            if (data.hasOwnProperty('content')) {
                obj['content'] = ApiClient.convertToType(data['content'], 'String');
            }
            if (data.hasOwnProperty('file_ids')) {
                obj['file_ids'] = ApiClient.convertToType(data['file_ids'], ['String']);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateMessageRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateMessageRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateMessageRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['role'] && !(typeof data['role'] === 'string' || data['role'] instanceof String)) {
            throw new Error("Expected the field `role` to be a primitive type in the JSON string but got " + data['role']);
        }
        // ensure the json data is a string
        if (data['content'] && !(typeof data['content'] === 'string' || data['content'] instanceof String)) {
            throw new Error("Expected the field `content` to be a primitive type in the JSON string but got " + data['content']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['file_ids'])) {
            throw new Error("Expected the field `file_ids` to be an array in the JSON data but got " + data['file_ids']);
        }

        return true;
    }


}

CreateMessageRequest.RequiredProperties = ["role", "content"];

/**
 * Role of the message sender (either 'user' or 'system')
 * @member {String} role
 */
CreateMessageRequest.prototype['role'] = undefined;

/**
 * The message content to be processed by the agent.
 * @member {String} content
 */
CreateMessageRequest.prototype['content'] = undefined;

/**
 * @member {Array.<String>} file_ids
 */
CreateMessageRequest.prototype['file_ids'] = undefined;

/**
 * @member {Object} metadata
 */
CreateMessageRequest.prototype['metadata'] = undefined;






export default CreateMessageRequest;

