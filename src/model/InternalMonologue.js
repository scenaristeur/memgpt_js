/**
 * OpenAI Assistants API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InternalMonologue model module.
 * @module model/InternalMonologue
 * @version 0.1.0
 */
class InternalMonologue {
    /**
     * Constructs a new <code>InternalMonologue</code>.
     * {     \&quot;internal_monologue\&quot;: msg,     \&quot;date\&quot;: msg_obj.created_at.isoformat() if msg_obj is not None else get_utc_time().isoformat(),     \&quot;id\&quot;: str(msg_obj.id) if msg_obj is not None else None, }
     * @alias module:model/InternalMonologue
     * @param id {String} 
     * @param date {Date} 
     * @param internalMonologue {String} 
     */
    constructor(id, date, internalMonologue) { 
        
        InternalMonologue.initialize(this, id, date, internalMonologue);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id, date, internalMonologue) { 
        obj['id'] = id;
        obj['date'] = date;
        obj['internal_monologue'] = internalMonologue;
    }

    /**
     * Constructs a <code>InternalMonologue</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InternalMonologue} obj Optional instance to populate.
     * @return {module:model/InternalMonologue} The populated <code>InternalMonologue</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InternalMonologue();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('date')) {
                obj['date'] = ApiClient.convertToType(data['date'], 'Date');
            }
            if (data.hasOwnProperty('internal_monologue')) {
                obj['internal_monologue'] = ApiClient.convertToType(data['internal_monologue'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InternalMonologue</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InternalMonologue</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InternalMonologue.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['internal_monologue'] && !(typeof data['internal_monologue'] === 'string' || data['internal_monologue'] instanceof String)) {
            throw new Error("Expected the field `internal_monologue` to be a primitive type in the JSON string but got " + data['internal_monologue']);
        }

        return true;
    }


}

InternalMonologue.RequiredProperties = ["id", "date", "internal_monologue"];

/**
 * @member {String} id
 */
InternalMonologue.prototype['id'] = undefined;

/**
 * @member {Date} date
 */
InternalMonologue.prototype['date'] = undefined;

/**
 * @member {String} internal_monologue
 */
InternalMonologue.prototype['internal_monologue'] = undefined;






export default InternalMonologue;

