/**
 * OpenAI Assistants API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import OpenAIMessage from './OpenAIMessage';

/**
 * The ListMessagesResponse model module.
 * @module model/ListMessagesResponse
 * @version 0.1.0
 */
class ListMessagesResponse {
    /**
     * Constructs a new <code>ListMessagesResponse</code>.
     * @alias module:model/ListMessagesResponse
     * @param messages {Array.<module:model/OpenAIMessage>} List of message objects.
     */
    constructor(messages) { 
        
        ListMessagesResponse.initialize(this, messages);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, messages) { 
        obj['messages'] = messages;
    }

    /**
     * Constructs a <code>ListMessagesResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ListMessagesResponse} obj Optional instance to populate.
     * @return {module:model/ListMessagesResponse} The populated <code>ListMessagesResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ListMessagesResponse();

            if (data.hasOwnProperty('messages')) {
                obj['messages'] = ApiClient.convertToType(data['messages'], [OpenAIMessage]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ListMessagesResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ListMessagesResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ListMessagesResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['messages']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['messages'])) {
                throw new Error("Expected the field `messages` to be an array in the JSON data but got " + data['messages']);
            }
            // validate the optional field `messages` (array)
            for (const item of data['messages']) {
                OpenAIMessage.validateJSON(item);
            };
        }

        return true;
    }


}

ListMessagesResponse.RequiredProperties = ["messages"];

/**
 * List of message objects.
 * @member {Array.<module:model/OpenAIMessage>} messages
 */
ListMessagesResponse.prototype['messages'] = undefined;






export default ListMessagesResponse;

