/**
 * OpenAI Assistants API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MemGPTUsageStatistics from './MemGPTUsageStatistics';
import Messages from './Messages';

/**
 * The MemGPTResponse model module.
 * @module model/MemGPTResponse
 * @version 0.1.0
 */
class MemGPTResponse {
    /**
     * Constructs a new <code>MemGPTResponse</code>.
     * @alias module:model/MemGPTResponse
     * @param messages {module:model/Messages} 
     * @param usage {module:model/MemGPTUsageStatistics} The usage statistics of the agent.
     */
    constructor(messages, usage) { 
        
        MemGPTResponse.initialize(this, messages, usage);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, messages, usage) { 
        obj['messages'] = messages;
        obj['usage'] = usage;
    }

    /**
     * Constructs a <code>MemGPTResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemGPTResponse} obj Optional instance to populate.
     * @return {module:model/MemGPTResponse} The populated <code>MemGPTResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemGPTResponse();

            if (data.hasOwnProperty('messages')) {
                obj['messages'] = Messages.constructFromObject(data['messages']);
            }
            if (data.hasOwnProperty('usage')) {
                obj['usage'] = ApiClient.convertToType(data['usage'], MemGPTUsageStatistics);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemGPTResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemGPTResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MemGPTResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `messages`
        if (data['messages']) { // data not null
          Messages.validateJSON(data['messages']);
        }
        // validate the optional field `usage`
        if (data['usage']) { // data not null
          MemGPTUsageStatistics.validateJSON(data['usage']);
        }

        return true;
    }


}

MemGPTResponse.RequiredProperties = ["messages", "usage"];

/**
 * @member {module:model/Messages} messages
 */
MemGPTResponse.prototype['messages'] = undefined;

/**
 * The usage statistics of the agent.
 * @member {module:model/MemGPTUsageStatistics} usage
 */
MemGPTResponse.prototype['usage'] = undefined;






export default MemGPTResponse;

