/**
 * OpenAI Assistants API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import HTTPValidationError from '../model/HTTPValidationError';
import Job from '../model/Job';

/**
* Jobs service.
* @module api/JobsApi
* @version 0.1.0
*/
export default class JobsApi {

    /**
    * Constructs a new JobsApi. 
    * @alias module:api/JobsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getJobApiJobsJobIdGet operation.
     * @callback module:api/JobsApi~getJobApiJobsJobIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Job} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Job
     * @param {String} jobId 
     * @param {module:api/JobsApi~getJobApiJobsJobIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Job}
     */
    getJobApiJobsJobIdGet(jobId, callback) {
      let postBody = null;
      // verify the required parameter 'jobId' is set
      if (jobId === undefined || jobId === null) {
        throw new Error("Missing the required parameter 'jobId' when calling getJobApiJobsJobIdGet");
      }

      let pathParams = {
        'job_id': jobId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Job;
      return this.apiClient.callApi(
        '/api/jobs/{job_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listActiveJobsApiJobsActiveGet operation.
     * @callback module:api/JobsApi~listActiveJobsApiJobsActiveGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Job>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Active Jobs
     * @param {module:api/JobsApi~listActiveJobsApiJobsActiveGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Job>}
     */
    listActiveJobsApiJobsActiveGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Job];
      return this.apiClient.callApi(
        '/api/jobs/active', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listJobsApiJobsGet operation.
     * @callback module:api/JobsApi~listJobsApiJobsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Job>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * List Jobs
     * @param {module:api/JobsApi~listJobsApiJobsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Job>}
     */
    listJobsApiJobsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['HTTPBearer'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Job];
      return this.apiClient.callApi(
        '/api/jobs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
